{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","services/marker-service.js"],"names":["App","meshbluConfig","uuid","token","gpsMarkers","conn","meshblu","createConnection","on","data","asan","markers","message","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","plugin","options","apiKey","apiLibraries","panControl","panControlOptions","position","developmentLogging","start","then","setRoot","MarkerService"],"mappings":";;;;;;;;;;;;;;MAEaA,cAAAA,MACX,eAAc;AAAA;;AAAA;;AACZ,QAAMC,gBAAgB;AACpBC,YAAM,sCADc;AAEpBC,aAAO;AAFa,KAAtB;AAIA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,IAAL,GAAYC,QAAQC,gBAAR,CAAyBN,aAAzB,CAAZ;AACA,SAAKI,IAAL,CAAUG,EAAV,CAAa,QAAb,EAAuB,UAACC,IAAD,EAAU;AAC/B,YAAKL,UAAL,GAAkBK,KAAKC,IAAL,CAAUC,OAA5B;AACD,KAFD;AAGA,SAAKC,OAAL,GAAe,gBAAf;AACD;;;;;;;;oBCdY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIAH,YAAQC,GAAR,CACOG,MADP,CACc,qBADd,EACqC,kBAAU;AACrCP,aAAOQ,OAAP,CAAe;AACXC,gBAAQ,KADG;AAEXC,sBAAc,kBAFH;AAGXF,iBAAS,EAAEG,YAAY,IAAd,EAAoBC,mBAAmB,EAAEC,UAAU,CAAZ,EAAvC,EAHE,EAAf;AAKH,KAPP;AAQA,QAAI,sBAAYjB,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYU,kBAAZ;AACD;;AAED,QAAI,sBAAYjB,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYG,MAAZ,CAAmB,iBAAnB;AACD;;AAEDJ,YAAQY,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMb,QAAQc,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UC/BenB,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;MCFYkB,wBAAAA,gBACX,uBAAYlC,aAAZ,EAA2B;AAAA;AAG1B","file":"app-bundle.js","sourcesContent":["import {MarkerService} from './services/marker-service'\n\nexport class App {\n  constructor() {\n    const meshbluConfig = {\n      uuid: '5cf4dca1-8698-44fb-808a-f1a3166500f6',\n      token: '8fb976697500d03537a4eec3c6fee1c9ab27a4a6'\n    }\n    this.gpsMarkers = []\n    this.conn = meshblu.createConnection(meshbluConfig)\n    this.conn.on('config', (data) => {\n      this.gpsMarkers = data.asan.markers\n    })\n    this.message = 'ASAN Telemetry'\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  aurelia.use\n        .plugin('aurelia-google-maps', config => {\n            config.options({\n                apiKey: false, // use `false` to disable the key\n                apiLibraries: 'drawing,geometry', //get optional libraries like drawing, geometry, ... - comma seperated list\n                options: { panControl: true, panControlOptions: { position: 9 } } //add google.maps.MapOptions on construct (https://developers.google.com/maps/documentation/javascript/3.exp/reference#MapOptions)\n            });\n        })\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","export class MarkerService {\n  constructor(meshbluConfig) {\n\n\n  }\n\n}\n"],"sourceRoot":"../src"}